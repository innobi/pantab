name: Create Platform Wheels

on: [push]

jobs:
  deploy-manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Docker Build
      run: |
        docker run --rm -e PLAT=manylinux2010_x86_64 -e PYVER=${{ matrix.python-version }} -v `pwd`:/io docker://quay.io/pypa/manylinux2010_x86_64 /io/manylinux_build.sh
        ls wheelhouse/

  deploy-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel pandas tableauhyperapi
    - name: Build wheels
      run: |
        python setup.py bdist_wheel
    - name: Upload linux wheel artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.python-version }}-macos
        path: dist

  deploy-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel pandas tableauhyperapi        
    - name: Build wheels
      run: |
        python setup.py bdist_wheel
    - name: Upload linux wheel artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.python-version }}-windows
        path: dist