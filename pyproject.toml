[build-system]
requires = [
  "scikit-build-core",
  "nanobind",
  "oldest-supported-numpy",  # only needed for datetime
]
build-backend = "scikit_build_core.build"

[project]
name = "pantab"
version = "4.0.0rc"
description = "Converts pandas DataFrames into Tableau Hyper Extracts and back"
license = {file = "LICENSE.txt"}
readme = "README.md"
authors = [
    { name = "Will Ayd", email = "will_ayd@innobi.io" },
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Office/Business",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["tableau", "visualization", "pandas", "dataframe"]

dependencies = [
    # in the future we need not require pyarrow as pandas implements the
    # PyCapsule interface. See pandas PR #56587
    "pyarrow>=14.0.0",
    "tableauhyperapi>=0.0.14567",
]

[project.urls]
Source = "https://github.com/innobi/pantab"

[project.scripts]
# Add your scripts here

[project.optional-dependencies]
dev = ["pytest"]

[tool.towncrier]
    package = "pantab"
    filename = "NEWS.rst"

[tool.pytest.ini_options]
testpaths = [
    "pantab/tests",
]

[tool.mypy]
[[tool.mypy.overrides]]
module = ["tableauhyperapi.*"]
ignore_missing_imports = true

[tool.isort]
include_trailing_comma = true
line_length = 88
multi_line_output = 3
known_first_party = "pantab"

[tool.cibuildwheel]
build = "cp39-*64 cp310-*64 cp311-*64 cp312-*64"
skip = "*musllinux*"

test-command = "pytest --import-mode=importlib {project}/pantab/tests"
test-requires = ["pytest", "pandas>=2.0.0", "polars", "numpy"]

[tool.ruff]
line-length = 88

[tool.cibuildwheel.linux]
repair-wheel-command = """
auditwheel repair -w {dest_dir} {wheel} --exclude libtableauhyperapi.so
"""

[tool.cibuildwheel.macos]
# --ignore-missing-dependencies is risky but didnt see a good way of convincing
# delocate-wheel otherwise that it is OK to not see the libtableauhyperli
# version 0.10.6 has an exclude option that *may* be helpful
repair-wheel-command = """
delocate-listdeps {wheel} && delocate-wheel --ignore-missing-dependencies --require-archs {delocate_archs} -w {dest_dir} {wheel}
"""
