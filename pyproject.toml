[build-system]
requires = [
  "scikit-build-core",
  "nanobind",
]
build-backend = "scikit_build_core.build"

[project]
name = "pantab"
version = "5.1.0"
description = "Converts pandas DataFrames into Tableau Hyper Extracts and back"
license = {file = "LICENSE.txt"}
readme = "README.md"
authors = [
    { name = "Will Ayd", email = "will_ayd@innobi.io" },
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Office/Business",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["tableau", "visualization", "pandas", "dataframe"]

dependencies = [
    # in the future we need not require pyarrow as pandas implements the
    # PyCapsule interface. See pandas PR #56587
    "pyarrow>=14.0.0",
]

[project.urls]
Source = "https://github.com/innobi/pantab"

[project.scripts]
# Add your scripts here

[project.optional-dependencies]
dev = ["pytest"]

[tool.towncrier]
    package = "pantab"
    filename = "NEWS.rst"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
]

[tool.mypy]
[[tool.mypy.overrides]]
module = ["tableauhyperapi.*", "pyarrow.*"]
ignore_missing_imports = true

[tool.isort]
include_trailing_comma = true
line_length = 88
multi_line_output = 3
known_first_party = "pantab"

[tool.cibuildwheel]
build = "cp39-*64 cp310-*64 cp311-*64 cp312-*64 cp313-*64"
skip = "*musllinux*"

test-command = "python -m pytest -n auto {project}/tests"
test-requires = [
  "pytest",
  "pytest-xdist[psutil]",
  "pandas>=2.0.0",
  "polars",
  "narwhals",
  "tableauhyperapi",
]

[tool.ruff]
line-length = 88

[tool.cibuildwheel.linux]
repair-wheel-command = """
auditwheel repair -w {dest_dir} {wheel} --exclude libtableauhyperapi.so
"""

[tool.cibuildwheel.macos]
# we do not want delocate to relocate the tableauhyperapi.lib as our CMake
# config already handles that, and the tableauhyperapi.lib necessicates
# the hyper bin being relative to it, which delocate does not know about
repair-wheel-command = """
delocate-listdeps {wheel} && delocate-wheel --exclude libtableauhyperapi.dylib --require-archs {delocate_archs} -w {dest_dir} {wheel}
"""

[tool.cibuildwheel.windows]
before-build = "python -m pip install delvewheel"
repair-wheel-command = "python -m delvewheel repair -v --ignore-in-wheel --add-path C:/Windows/System32 -w {dest_dir} {wheel}"
